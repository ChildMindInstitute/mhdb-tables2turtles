#!/usr/bin/env python
"""
This is a program to convert a mental health spreadsheet to RDF.

Authors:
    - Arno Klein, 2017  (arno@childmind.org)  http://binarybottle.com

Copyright 2017, Child Mind Institute (http://childmind.org), Apache v2.0 License

"""
import argparse
import pandas as pd
import rdflib

# ------------------------------------------------------------------------------
# Command-line arguments
# ------------------------------------------------------------------------------
debug = True
if debug:
    FILE = '/data/mentalhealth.xlsx'
    baseurl = 'purl.com/mentalhealth'
else:
    parser = argparse.ArgumentParser(description="""
                        This program converts a mental health spreadsheet to RDF.""",
                                     formatter_class = lambda prog:
                                     argparse.HelpFormatter(prog,
                                                            max_help_position=40))
    rec_args = parser.add_argument_group('recommended arguments')

    # "positional arguments":
    parser.add_argument("FILE", help=("spreadsheet file path"))
    # "optional arguments":
    parser.add_argument("-b", "--baseurl", help="name of base URL",
                        default='purl.com/mentalhealth', metavar='STR')
    args = parser.parse_args()
    FILE = args.FILE
    baseurl = args.baseurl

# ------------------------------------------------------------------------------
# Import spreadsheet
# ------------------------------------------------------------------------------
xls = pd.ExcelFile(FILE)

# ------------------------------------------------------------------------------
# Extract worksheets as pandas dataframes
# ------------------------------------------------------------------------------
Disorder = xls.parse("Disorder")
DisorderInOrExclusionCriterion = xls.parse("DisorderInOrExclusionCriterion")
DisorderSeverity = xls.parse("DisorderSeverity")
DisorderCategory = xls.parse("DisorderCategory")
DisorderSubcategory = xls.parse("DisorderSubcategory")
DisorderSubsubcategory = xls.parse("DisorderSubsubcategory")
DisorderSubsubsubcategory = xls.parse("DisorderSubsubsubcategory")
DisorderType = xls.parse("DisorderType")
Symptom = xls.parse("Symptom")
SymptomCategory = xls.parse("SymptomCategory")
Source = xls.parse("Source")
SourceType = xls.parse("SourceType")
Question = xls.parse("Question")
QuestionCategory = xls.parse("QuestionCategory")
Questionnaire = xls.parse("Questionnaire")
AnswerType = xls.parse("AnswerType")
ChildMindInstituteCategory = xls.parse("ChildMindInstituteCategory")

# ------------------------------------------------------------------------------
# Loop through rows of Disorder worksheet
# ------------------------------------------------------------------------------
for index in Disorder.index:

    i = index - 1

    disorder = Disorder.DisorderName.iloc[[i]]
    ICD9 = Disorder.ICD9code.iloc[[i]]
    ICD10 = Disorder.ICD10code.iloc[[i]]
    note = Disorder.DisorderNote.iloc[[i]]

    icategory0 = Disorder.DisorderCategory_index.iloc[[i]]
    icategory1 = Disorder.DisorderSubcategory_index.iloc[[i]]
    icategory2 = Disorder.DisorderSubsubcategory_index.iloc[[i]]
    icategory3 = Disorder.DisorderSubsubsubcategory_index.iloc[[i]]
    idisordertype = Disorder.DisorderType_index.iloc[[i]]
    iinclusion = Disorder.DisorderInclusionCriterion_index.iloc[[i]]
    iexclusion = Disorder.DisorderExclusionCriterion_index.iloc[[i]]
    iseverity = Disorder.DisorderSeverity_index.iloc[[i]]

    category = DisorderCategory.DisorderCategoryName[icategory0]
    subcategory = DisorderSubcategory.DisorderSubcategoryName[icategory1]
    subsubcategory = DisorderSubsubcategory.DisorderSubsubcategoryName[icategory2]
    subsubsubcategory = DisorderSubsubsubcategory.DisorderSubsubsubcategoryName[icategory3]
    disordertype = DisorderType.DisorderTypeName[idisordertype]
    inclusion = DisorderType.DisorderTypeName[iinclusion]
    exclusion = DisorderType.DisorderTypeName[iexclusion]
    severity = DisorderSeverity.DisorderSeverityName[iseverity]

# ============================================================================
# Doctests
# ============================================================================
if __name__ == "__main__":
    import doctest
    doctest.testmod(verbose=True)
